function Actor () {
  if(typeof Actor.instance === "object"){
    return Actor.instance;
  }

  this.element  = document.getElementById("actor");
}
 
/**
 * Get Axis the Actor element
 * @param  {String} axis
 * @return {Inter}
 */
Actor.prototype.getAxis = function(axis) {
  if(axis === "x"){
    return this.element.offsetLeft + ( this.element.offsetWidth / 2 );
  }
  if(axis === "y"){
    return this.element.offsetTop;
  }
};

Actor.prototype.moveShortToTop = function() {
  var increase = this.getAxis('y') - 5;
  
  this.changeClass('rotate-to-up');
  this.element.style.top = increase + "px";
};

Actor.prototype.moveShortToDown = function() {
  var decrements = this.getAxis('y') + 5 ;

  this.changeClass('rotate-to-down');
  this.element.style.top = decrements + "px";
};

Actor.prototype.moveShortToLeft = function() {
  var increase = this.getAxis('x') - 5; 

  this.changeClass('rotate-to-left');
  this.element.style.left = increase + "px";
};

Actor.prototype.moveShortToRight = function() {
  var decrements = this.getAxis('x') + 5;

  this.changeClass('rotate-to-right');
  this.element.style.left = decrements + "px";
};

Actor.prototype.moveShortToTopRight = function() {
  var 
    increaseY = this.getAxis('y') - 5,
    increaseX = this.getAxis('x') + 5;

  this.changeClass('rotate-to-top-right');
  this.element.style.top  = increaseY + "px";
  this.element.style.left = increaseX + "px";

};

Actor.prototype.moveShortToTopLeft = function() {
  var 
    increaseY = this.getAxis('y') - 5,
    increaseX = this.getAxis('x') - 5;

  this.changeClass('rotate-to-top-left');
  this.element.style.top  = increaseY + "px";
  this.element.style.left = increaseX + "px";

};

Actor.prototype.moveShortToDownRight = function() {
  var 
    increaseY = this.getAxis('y') + 5,
    increaseX = this.getAxis('x') + 5;

  this.changeClass('rotate-to-down-right');
  this.element.style.top  = increaseY + "px";
  this.element.style.left = increaseX + "px";

};

Actor.prototype.moveShortToDownLeft = function() {
  var 
    increaseY = this.getAxis('y') + 5,
    increaseX = this.getAxis('x') - 5;

  this.changeClass('rotate-to-down-left');
  this.element.style.top  = increaseY + "px";
  this.element.style.left = increaseX + "px";

};



Actor.prototype.changeClass = function(newValue) {
  var 
    classReg = new RegExp(newValue),
    oldClass = this.element.className,
    newClass = ""; 

    //Verify if newClass existe
    if( ! classReg.test(oldClass) ) {
      //Remove All class with started 'rotate-'
      newClass = oldClass.replace(/ rotate.*/,"");

      //New string class
      newClass += " " + newValue;
      
      this.element.className = newClass;
    }

};


;function Controller () {
	if(typeof Controller.instance === "object"){
		return Controller.instance;
	}

	this.actor = new Actor();
	this.keysMoveActor = {
		37 : false, // left 
		38 : false, // up
		39 : false, // right
		40 : false  // down
	};
}


Controller.prototype.moveActor = function() {
	var 
		self = this;

	window.onkeydown = function(e){
		console.log(e.keyCode);
		checkKey = [];
		if(e.keyCode in self.keysMoveActor ) {
			
			self.keysMoveActor[e.keyCode] = true; 
			
			for (var i in self.keysMoveActor) {
				if( self.keysMoveActor[i] === true ){
					if(  checkKey.indexOf(i) === -1 ){
						checkKey.push( i );
					}
				}
			}

			if(checkKey.length === 2) {
				if ( self.keysMoveActor[38] && self.keysMoveActor[39] ){
					self.actor.moveShortToTopRight();		
				}
				else if ( self.keysMoveActor[38] && self.keysMoveActor[37] ){
					self.actor.moveShortToTopLeft();		
				}
				else if ( self.keysMoveActor[40] && self.keysMoveActor[39] ){
					self.actor.moveShortToDownRight();		
				}
				else if ( self.keysMoveActor[40] && self.keysMoveActor[37] ){
					self.actor.moveShortToDownLeft();		
				}
			} else {
				if( self.keysMoveActor[38] ){
					self.actor.moveShortToTop();			
				}

				else if ( self.keysMoveActor[40] ) {
					self.actor.moveShortToDown();			
				}

				else if ( self.keysMoveActor[39] ){
					self.actor.moveShortToRight();			
				}

				else if ( self.keysMoveActor[37] ) {
					self.actor.moveShortToLeft();		
				}
			}

		}
	};

	window.onkeyup = function (e) {
		if(e.keyCode in self.keysMoveActor ) {
			self.keysMoveActor[e.keyCode] = false; 
		}
	};
};;function View () {
	this.controller = new Controller();
}

View.prototype.init = function() {
	this.controller.moveActor();
};;window.onload = function (argument) {
	var game = new View().init();
};
